////////////////////////////////////////////////////////////////////////////////////////
// NOTAS
////////////////////////////////////////////////////////////////////////////////////////

¿Qué deberiamos saber en este moemnto?
¬ Funcionamiento de las rutas
¬ Funcionamiento de los controladores
¬ 

////////////////////////////////////////////////////////////////////////////////////////
// SEP 10
////////////////////////////////////////////////////////////////////////////////////////

Clonar repositorio

    $ git clone url.git asistencias
    $ cd asistencias
    $ composer install
    $ cp .env.example .env
    $ php artisan key:generate

editar .env configurar bd

se descargo el tema de vadi-admin de github y se copio el index.html en tma.blade.php


////////////////////////////////////////////////////////////////////////////////////////
// SEP 12
////////////////////////////////////////////////////////////////////////////////////////

Modelo vista controlador, foto pintarron

Se creo un modelo y un controlador

    $ php artisan make:model Roles
    $ php artisan make:controller RoleController --resource --model=Roles
  
Se creo una carpeta roles y se escribio en el archivo ""Listado de Roles"

    $ cd resources/views
    $ mkdir roles
    $ touch indexRoles.blade.php
    $ nano indexRoles.blade.php

Agregar la siguiente linea al archivo web.php

    Route::get('/roles', 'RoleController@index');
    
Agregar la siguiente linea en el método index de roleController.php

    return view('roles.indexRoles');

////////////////////////////////////////////////////////////////////////////////////////
// SEP 17
////////////////////////////////////////////////////////////////////////////////////////

Se creo el controlador materia y se modificó el web.php

Se crearon los archivos indexMateria, formMateria y showMateria, con su respectiva en el web.php

Se ejecutó el comando
  
  $php artisan route:list
  
Se creó el archivo formEditMateria para editar alguna materia y se crearon las rutas en el web.php,
vimos como pasar una variable a través de la ruta usando {id}, podemos escribir todo el codigo en el web.php
pero crearia un codigo muy grande y dificil de mantener, esa es la razón por la que se utilizan los controladores

Se mdofico el archivo web.php para que todas las funciones se hicieran desde el controlador, ahira al volver a 
ejecutar el comando route:list notamos en la columna action que ya no tenemos "clousure" ahora tenemos la direccion
al modulo del controlador

Se comentaron las lineas escritas en el archivo web.php para usar

   Route::resource('materia', 'MateriaController');

////////////////////////////////////////////////////////////////////////////////////////
// SEP 19
////////////////////////////////////////////////////////////////////////////////////////

Se creo una cuenta en github y gitlab, en terminaal se realizó lo siguiente:

  $ git init
  $ git status
  $ git add .
  $ git commit -m "Ejemplo asistencias"
  $ git remote add origin https://github.com/josephinedo/Ejemplo-Asistencias.git
  $ git push -u origin master

Se agrego el archivo presente notes.txt al directorio asistencias y se hizo el commit

¿Cómo instalar el proyecto en laravel?

  $ git clone https://github.com/josephinedo/Ejemplo-Asistencias.git ejemplo
  
 Necesitamos las librerias de laravel, para obtenerlas hacemos:
 
  $ composer install
  
 El comando anterior nos generó los archivos que no estaban en el repositorio, ahora debemos
 modificar el archivo .env y agregar el key
 
  $ php artisan key:generate

Debido a que se esta trabajando en linux, debemos de dar permisos a algunas carpetas, accedemos a:

  https://wpkb.org/install-laravel-5-5-at-codeanywhere-with-php-7-1-and-mysql-5-7/
  
y nos ubicamos en la parte de "Set Permissions"

  $ cd ~/workspace/myapp
  $ sudo chgrp -R www-data storage bootstrap/cache
  $ sudo chmod -R ug+rwx storage bootstrap/cache
  
además se deben de seguir los pasos para configurar apache, ver el sitio web.

Crear base de datos

  $ mysql -uroot
  mysql> create database asistencias;
  mysql> exit

Hacer la migración

  $ php artisan migrate

  
////////////////////////////////////////////////////////////////////////////////////////
// SEP 26
////////////////////////////////////////////////////////////////////////////////////////

Se modificó el archivo fromaMateria.blade

<form action=" action('MateriaController@store') " method ='POST'>

El método action('MateriaController@store') es para poder generar la URL sin depender de la ruta, otra manera es con el
método route(materia.create)

////////////////////////////////////////////////////////////////////////////////////////
// TAREA
////////////////////////////////////////////////////////////////////////////////////////

Para poder instalar valet en la mac se sigue el procedimiento mostrado en:

  https://laravel.com/docs/5.7/valet

Con lo que se debe tener cuidado es con la instalación de mysql debido a que la versión que
es compatible con laravel es la 5.7, además se encontraron complicaciones para instalar mysql
desde brew y se procedio a instalar la versión 5.7 desde el sitio web de mysql, tomando en 
cuenta los siguientes pasos despues de la instalación:

  1. Agregar la siguiente ruta al PATH

    export PATH=$PATH:/usr/local/mysql/bin

  2. Cambiar la contraseña del usuario root

    mysql> SET PASSWORD FOR 'root'@'localhost' = PASSWORD('');

  3. Crear la base de datos y proceder con la migración
























